{"version":3,"sources":["main.js"],"names":["$webList","$","$lastWeb","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","console","log","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.5b32eee4.map","sourceRoot":"..\\src","sourcesContent":["const $webList = $('.webList')\r\nconst $lastWeb = $webList.find('li.lastWeb')\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x)//将字符串转成对象\r\nconst hashMap = xObject || [\r\n  {logo: 'M', url: 'https://developer.mozilla.org/zh-CN/docs/Web'}, {logo: 'W', url: 'https://www.w3.org'},\r\n  {logo: 'B', url: 'https://www.bilibili.com'}\r\n]//弄个hash表对应每个网页\r\n\r\nconst simplifyUrl = (url) => {\r\n  return url.replace('http://', '').replace('https://', '').replace('www.', '').replace(/\\/.*/, '')//删除/开头的内容\r\n}//将前置协议替换成''\r\nconst render = () => {\r\n  $webList.find('li:not(.lastWeb)').remove()//由于点添加按钮的时候会多生成之前的网页，因此要在生成之前先清空，这样就不会重复\r\n  hashMap.forEach((node, index) => {\r\n\r\n    const $li = $(`<li>\r\n        \r\n            <div class=\"web\">\r\n                <div class=\"logo\">\r\n                    ${node.logo}\r\n                </div>\r\n                <div class=\"webLink\">${simplifyUrl(node.url)}</div>\r\n                <div class=\"close\">\r\n                    <svg class=\"icon\" aria-hidden=\"true\">\r\n                            <use xlink:href=\"#icon-close\"></use>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        \r\n    </li>`).insertBefore($lastWeb)//将li插入到添加网址的div前面\r\n    $li.on('click', () => {\r\n      window.open(node.url)\r\n    })//监听点击事件，点击之后跳转页面\r\n    $li.on('click', '.close', (e) => {\r\n      e.stopPropagation()//阻止冒泡\r\n      hashMap.splice(index, 1)//点击x之后删除网页，splice是数组删除\r\n      render()//重新渲染页面\r\n    })\r\n\r\n  })\r\n}\r\n\r\n\r\nrender()//渲染一遍\r\n\r\n$('.addButton')\r\n  .on('click', () => {\r\n    let url = window.prompt('请输入你要添加的网址')//监听用户输入网址事件\r\n\r\n    if (url.indexOf('http') !== 0) {\r\n      url = 'https://' + url\r\n    }//如果用户少输入https，我们就加上\r\n    console.log(url)\r\n\r\n\r\n    hashMap.push({logo: simplifyUrl(url)[0].toUpperCase(), url: url})//将用户输入的网页添加到hashmap上\r\n\r\n    render()//加入新的网页，重新渲染\r\n  })\r\nwindow.onbeforeunload = () => {\r\n  console.log('页面关闭之前触发')\r\n  const string = JSON.stringify(hashMap)//由于localStorage只能存字符串，因此把hashmap转换成字符串\r\n  localStorage.setItem('x', string)//在localStorage存储网页\r\n}//window.onbeforeunload 是关闭页面之前触发\r\n\r\n$(document).on('keypress', (e) => {\r\n\r\n  const {key} = e  //const key =e.key 的简写\r\n  for (let i = 0; i < hashMap.length; i++) {\r\n    if (hashMap[i].logo.toLowerCase() === key) {\r\n      window.open(hashMap[i].url)\r\n    }\r\n  }\r\n})//键盘输入字母找到对应的字母网页并打开"]}
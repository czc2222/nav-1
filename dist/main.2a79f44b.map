{"version":3,"sources":["main.js"],"names":["$webList","$","$lastWeb","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","console","log","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.2a79f44b.map","sourceRoot":"..\\src","sourcesContent":["const $webList =$('.webList')\r\nconst $lastWeb=$webList.find('li.lastWeb')\r\nconst x=localStorage.getItem('x')\r\nconst xObject=JSON.parse(x)//将字符串转成对象\r\nconst hashMap =xObject || [\r\n    {logo:'M',url:'https://developer.mozilla.org/zh-CN/docs/Web'},{logo:'W',url:'https://www.w3.org'},\r\n    {logo:'B',url:'https://www.bilibili.com'}\r\n]//弄个hash表对应每个网页\r\n\r\nconst simplifyUrl =(url)=>{\r\n    return url.replace('http://','').replace('https://','').replace('www.','').replace(/\\/.*/,'')//删除/开头的内容\r\n}//将前置协议替换成''\r\nconst render=()=>{\r\n    $webList.find('li:not(.lastWeb)').remove()//由于点添加按钮的时候会多生成之前的网页，因此要在生成之前先清空，这样就不会重复\r\n    hashMap.forEach((node,index)=>{\r\n        \r\n        const $li =$(`<li>\r\n        \r\n            <div class=\"web\">\r\n                <div class=\"logo\">\r\n                    ${node.logo}\r\n                </div>\r\n                <div class=\"webLink\">${simplifyUrl(node.url)}</div>\r\n                <div class=\"close\">\r\n                    <svg class=\"icon\" aria-hidden=\"true\">\r\n                            <use xlink:href=\"#icon-close\"></use>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        \r\n    </li>`).insertBefore($lastWeb)//将li插入到添加网址的div前面\r\n      $li.on('click',()=>{\r\n        window.open(node.url)\r\n      })//监听点击事件，点击之后跳转页面\r\n      $li.on('click','.close',(e)=>{\r\n        e.stopPropagation()//阻止冒泡\r\n        hashMap.splice(index,1)//点击x之后删除网页，splice是数组删除\r\n        render()//重新渲染页面\r\n      })\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\nrender()//渲染一遍\r\n\r\n$('.addButton')\r\n  .on('click',()=>{\r\n      let url=window.prompt('请输入你要添加的网址')//监听用户输入网址事件\r\n      if(url.indexOf('http')!==0){\r\n      url = 'https://'+url\r\n      }//如果用户少输入https，我们就加上\r\n      console.log(url)\r\n      \r\n      hashMap.push({logo:simplifyUrl(url)[0].toUpperCase(),url:url})//将用户输入的网页添加到hashmap上\r\n      \r\n      render()//加入新的网页，重新渲染\r\n    })\r\nwindow.onbeforeunload=()=>{\r\nconsole.log('页面关闭之前触发')\r\nconst string=JSON.stringify(hashMap)//由于localStorage只能存字符串，因此把hashmap转换成字符串\r\nlocalStorage.setItem('x',string)//在localStorage存储网页\r\n}//window.onbeforeunload 是关闭页面之前触发\r\n\r\n$(document).on('keypress',(e)=>{\r\n\r\n     const {key}= e  //const key =e.key 的简写\r\n     for(let i=0;i<hashMap.length;i++){\r\n       if (hashMap[i].logo.toLowerCase()===key){\r\n        window.open(hashMap[i].url)\r\n       }\r\n     }\r\n})"]}